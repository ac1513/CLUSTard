JOBID = "Methanoregulaceae_3"

rule all:
    input:
        "family_kraken.txt",
        "clusters_oi.txt",
        "logs/kraken_out.log",
        expand("plots/1_{jobID}_plot.pdf", jobID=JOBID)

rule kraken_filter:
    input:
        "james_madness/results90/kraken/"
    output:
        "family_kraken.txt"
    priority:
        1000
    run:
        import glob
        import os

        kraken_files = glob.glob('james_madness/results90/kraken/*_report.out')
        d = {}
        for file in kraken_files:
            basename = os.path.basename(file)
            d[basename] = file
        for file in list(d.keys()):
            shell(r"""echo "{file}:" `sort -k1nr james_madness/results90/kraken/{file} | grep -P "\\tF\\t" | head -n1 ` >> {output}""")

rule find_clusters:
    input:
        families = "families.txt",
        kraken = "family_kraken.txt"
    output:
        "clusters_oi.txt"
    priority:
        500
    shell:
        """
        grep -i -f {input.families} {input.kraken} | cut -d ':' -f1 | rev | cut -c 19- | rev > {output} #should work for any length of contig name
        """

rule download_genomes:
    input:
        cluster_oi = "clusters_oi.txt",
        gen_ids = "genome_ids.txt",
        families = "families.txt",
        outgroups = "outgroups.txt"
    output:
        "logs/kraken_out.log"
    params:
        length = "500000"
    priority:
        100
    conda:
        "envs/py3.yaml"
    shell:
        """
        rm -fr genomes
        mkdir -p genomes

        while read cluster; do
            size=$(grep -v ">" "james_madness/results90/${{cluster}}.fasta" | wc | awk '{{print $3-$1}}')
            if (( size > {params.length} ));
            then
                cp "james_madness/results90/${{cluster}}.fasta" genomes/;
                echo "Copying ${{cluster}} to working directory";
                echo ">${{cluster}}" >> {output};
                less james_madness/results90/kraken/${{cluster}}_kraken_report.out >> {output};
            else
                echo "Ignoring ${{cluster}}, under {params.length}bp";
            fi;
        done < {input.cluster_oi}

        python scripts/entrez_down.py {input.gen_ids} {input.families} {input.outgroups}

        for fname in genomes/*.fasta; do
            mv -- "$fname" \
            genomes/"$(awk 'NR==1{{printf("%s_%s_%s\\n",$2,$3,substr($1,2));exit}}' "$fname")".fasta
        done

        rename '__' 'Cluster_' genomes/*
        """

rule plot:
      input:
          log = "logs/kraken_out.log"
      output:
          expand("plots/1_{jobID}_plot.pdf", jobID=JOBID)
      params:
          files = "plot_in_files.txt",
          csv_loc = "james_madness/results90"
      conda:
          "envs/py3.yaml"
      priority:
          50
      shell:
          """
          ls -S genomes/Cluster*.fasta > {params.files}
          sed -i "s/.fasta/.csv/g" {params.files}
          sed -i "s:genomes:{params.csv_loc}:g" {params.files}
          cp scripts/plot.py .

          mkdir -p plots

          while read csv_file; do
              cp ${{csv_file}} plots/;
          done < {params.files}

          python plot.py {params.files} JOBID

          rm plot.py
          rm params.files
          rm plots/*csv
          """
