configfile: "config.yaml"

import pandas as pd
df_samples = pd.read_csv(config["samples"], sep ='\t', index_col = 0)
samples = df_samples["sample"].to_list()

JOBID = config["jobid"]
RAW_SR = config["RAW_SR"]
REFIN = config["REFIN"]
CONTIG_T = config["CONTIG_T"]
P_THRESH = config["P_THRESH"]
krakendb = config["krakendb"]
kraken_level = str(config["kraken_level"])
blastdb = config["blastdb"]

(CLUSTERS,) = glob_wildcards("output/results/Cluster_{CLUSTER}.csv")

rule all:
    input:
        expand("output/kraken/{JOBID}_Cluster_{CLUSTERS}_kraken.out", JOBID = JOBID, CLUSTERS = CLUSTERS),
        expand("output/kraken/{JOBID}_{kraken_level}_top_kraken.out", JOBID = JOBID, kraken_level = kraken_level),
        "tbl2asn_update.out",
        expand("output/prokka/Cluster_{CLUSTERS}/{JOBID}_{CLUSTERS}.err", JOBID = JOBID, CLUSTERS = CLUSTERS),
        expand("logs/{JOBID}_slurm_prokka.log", JOBID=JOBID),
        expand("output/checkm/{JOBID}_checkm.log", JOBID=JOBID),
        expand("output/blast/{JOBID}_Cluster_{CLUSTERS}_report_blast.out", JOBID=JOBID, CLUSTERS=CLUSTERS)

localrules: kraken_merge, tbl2asn, output

rule kraken:
    input:
        "output/results/Cluster_{CLUSTERS}.fasta"
    output:
        report = "output/kraken/{JOBID}_Cluster_{CLUSTERS}_report_kraken.out",
    params:
        db = krakendb,
        output = "output/kraken/{JOBID}_Cluster_{CLUSTERS}_kraken.out"
    conda:
        "../envs/kraken2.yaml"
    threads:
        4
    resources:
        mem_mb = 16000
    shell:
        """
        kraken2 -db {params.db} --threads {threads} --report {output.report} --output {params.output} --use-names {input}
        """

rule kraken_merge:
    input:
        report = expand("output/kraken/{JOBID}_Cluster_{CLUSTERS}_report_kraken.out", JOBID = JOBID, CLUSTERS = CLUSTERS)
    output:
        "output/kraken/{JOBID}_{kraken_level}_top_kraken.out"
    params:
        level = {kraken_level}
    shell:
        """
        cd output/kraken
        find -name '{JOBID}*_report_kraken.out' -type f -printf '\\n%p\\t' -exec sh -c 'echo {{}} | sort -k1nr {{}} | grep -P "\\t{params.level}\\t" | head -n1 ' \\; > {JOBID}_{kraken_level}_top_kraken.out
        """

rule tbl2asn:
    input:
        expand("output/kraken/{JOBID}_{kraken_level}_top_kraken.out", JOBID = JOBID, kraken_level = kraken_level)
    output:
        touch("tbl2asn_update.out")
    conda:
        "../envs/prokka.yaml"
    shell:
        """
        cd $(dirname $(which tbl2asn))
        rm tbl2asn
        wget https://github.com/tseemann/prokka/raw/master/binaries/linux/tbl2asn
        chmod +x tbl2asn
        """

rule prokka:
    input:
        clusters = "output/results/Cluster_{CLUSTERS}.fasta",
        wait = "tbl2asn_update.out"
    output:
        file = "output/prokka/Cluster_{CLUSTERS}/{JOBID}_{CLUSTERS}.err"
    params:
        dir = "output/prokka/Cluster_{CLUSTERS}/",
        prefix = "{JOBID}_{CLUSTERS}",
        prokka = "output/results/Cluster_{CLUSTERS}_short.fasta"
    conda:
        "../envs/prokka.yaml"
    threads:
        20
    shell:
        """
        awk '/^>/{{print substr($1,1,21); next}}{{print}}' < {input.clusters} > {params.prokka}
        prokka {params.prokka} --outdir {params.dir} --prefix {params.prefix} --cpus {threads} --force
        rm {params.prokka}
        """

rule blast:
    input:
        input = "output/results/Cluster_{CLUSTERS}.fasta",
        wait = expand("output/prokka/Cluster_{CLUSTERS}/{JOBID}_{CLUSTERS}.err", JOBID = JOBID, CLUSTERS=CLUSTERS)
    output:
        report = "output/blast/{JOBID}_Cluster_{CLUSTERS}_report_blast.out",
    params:
        db = blastdb
    conda:
        "../envs/blast.yaml"
    threads:
        4
    shell:
        """
        export BLASTDB=$BLASTDB:{params.db}
        blastn -db {params.db} -num_threads {threads} -query {input.input} -outfmt "7 qseqid sscinames sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore" | awk '/hits found/{{getline;print}}' | grep -v "#" > {output.report}
        """

rule output:
    input: expand("output/blast/{JOBID}_Cluster_{CLUSTERS}_report_blast.out", CLUSTERS = CLUSTERS, JOBID = JOBID)
    output:
        "logs/{JOBID}_slurm_kraken2SM.log"
    shell:
        """
        cat *.out > {output}
        rm *.out
        """

rule checkm:
    input:
        expand("output/results/Cluster_{CLUSTERS}.fasta", CLUSTERS = CLUSTERS),
        wait = expand("logs/{JOBID}_slurm_kraken2SM.log", JOBID = JOBID)
    output:
        expand("output/checkm/{JOBID}_checkm.log", JOBID=JOBID)
    params:
        out = expand("output/checkm", JOBID=JOBID),
        input = "output/results"
    threads:
        40
    conda:
        "../envs/checkm.yaml"
    shell:
        """
        module load bio/CheckM
        checkm lineage_wf -f {output} --tab_table -x fasta -t {threads} {params.input} {params.out}
        """
